<?php
/**
 * @file
 * @TODO: Missing documentation!
 * @TODO: It would be nice with some more documentation about what all these
 *        alter do!
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\node\NodeInterface;
use Drupal\Core\Session\AccountInterface;
use Drupal\Core\Access\AccessResult;

/**
 * Implements hook_theme_suggestions_alter().
 *
 * @TODO: A note about this suggestion would be nice!
 */
function grundsalg_setup_theme_suggestions_alter(array &$suggestions, array $variables) {
  if (isset($variables['form']) && $variables['theme_hook_original'] == 'node_edit_form') {
    $suggestions[] = 'grundsalg_setup_node_form';
  }

  return $suggestions;
}

/**
 * Implements hook_theme().
 *
 * @TODO: Why?
 */
function grundsalg_setup_theme($existing, $type, $theme, $path) {
  return array(
    'grundsalg_setup_node_form' => array(
      'render element' => 'form',
      'template' => 'grundsalg-setup-node-form',
    ),
  );
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * @TODO: Why?
 */
function grundsalg_setup_form_node_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $form['revision']['#access'] = FALSE;
  $form['revision_information']['#access'] = FALSE;
  $form['advanced']['#attributes']['style'] = 'margin-top:1em';
  $form['#attached']['library'][] = 'grundsalg_setup/form_styles';
  $form['field_media_image']['widget']['entity_browser']['#weight'] = -10;
  $form['field_media_image']['widget']['current']['#weight'] = -50;
  $form['field_media_document']['widget']['entity_browser']['#weight'] = -10;
  $form['field_media_document']['widget']['current']['#weight'] = -50;

  // Disable fields on the sub-division content-type as their data should not be
  // alter and is updated by the fagsystem.
  if ($form_id == 'node_subdivision_edit_form' || $form_id == 'node_subdivision_form') {
    if (isset($form['field_plot_type'])) {
      $form['field_plot_type']['widget']['#attributes']['readonly'] = TRUE;
      $form['field_plot_type']['widget']['#attributes']['disabled'] = TRUE;
    }
    if (isset($form['field_city_reference'])) {
      $form['field_city_reference']['widget']['0']['target_id']['#attributes']['readonly'] = TRUE;
      $form['field_city_reference']['widget']['0']['target_id']['#attributes']['disabled'] = TRUE;
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * @TODO: Why?
 */
function grundsalg_setup_form_itkore_footer_settings_alter(&$form, FormStateInterface $form_state, $form_id) {
  $config = \Drupal::getContainer()->get('itkore_admin.itkore_config');
  $form['contact_text'] = array(
    '#title' => t('Contact information'),
    '#type' => 'text_format',
    '#format' => 'filtered_html',
    '#default_value' => ($config->get('contact_text')) ? $config->get('contact_text') : '',
    '#weight' => '0',
  );
  $form['#submit'][] = '_grundsalg_setup_form_submit_handler';
}

/**
 * Custom submit handler for footer settings form.
 *
 * @param $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 */
function _grundsalg_setup_form_submit_handler($form, FormStateInterface $form_state) {
  // Set the contact settings as part of submit.
  \Drupal::getContainer()->get('itkore_admin.itkore_config')->set('contact_text', $form_state->getValue('contact_text')['value']);
}

/**
 * Implements hook_preprocess_itkore_footer_block().
 *
 * @TODO: Why?
 */
function grundsalg_setup_preprocess_itkore_footer_block(&$variables) {
  $config = \Drupal::getContainer()->get('itkore_admin.itkore_config');
  $variables['contact_text'] = check_markup($config->get('contact_text'), 'filtered_html');
}

/**
 * Implements hook_node_access().
 *
 * @TODO: An extra note about this change to access to some node types would be
 *        nice!
 */
function grundsalg_setup_node_access(NodeInterface $node, $op, AccountInterface $account) {
  $type = $node->bundle();
  if ($type == 'project' || $type == 'content_block') {
    if ($op == 'view') {
      if ($account->id() == 0) {
        return AccessResult::forbidden();
      }
      return AccessResult::allowedIf($account->hasPermission('administer nodes'));
    }
  }
}

/**
 * Implements hook_menu_local_actions_alter().
 *
 * @TODO: A note about why we need this permission would be nice!
 */
function grundsalg_setup_menu_local_actions_alter(&$local_actions) {
  // Entityqueue does not provide permissions for creating new queues.
  $user = Drupal::currentUser();
  if (!$user->hasPermission('administer entityqueue')) {
    unset($local_actions['entity.entity_queue.add_form']);
  }
}
